package Test;

import java.io.PrintStream;

import ch.ntb.inf.deep.runtime.mpc555.driver.RN131;
import ch.ntb.inf.deep.runtime.mpc555.driver.SCI;
import ch.ntb.inf.deep.runtime.ppc32.Task;
import Communication.Communication;
import definitions.RobotConstants;

public class TestCommunication extends Task {
	
	private Communication wifi;
	private int counter = 0;
	private int sendCounter = 0;
	private RN131.State state =null;
	
	public TestCommunication() throws Exception{
		period = 500;
		Task.install(this);
		SCI sci1 = SCI.getInstance(SCI.pSCI1);
		sci1.start(19200, SCI.NO_PARITY, (short)8);
		
		System.out = new PrintStream(sci1.out);
		System.err = new PrintStream(sci1.out);
		System.out.println("TestCommunication");
		wifi =new Communication();
	}
	
	public void action(){
		RN131.State localState=wifi.getState();
		if(state != localState)
		{			
			System.out.print(wifi.getState().toString());
			state=localState;
		}
		
		if(wifi.connected()){
//			System.out.print("\t(connected)\t");
			System.out.print(".");
		}
		else{
//			System.out.print("\t(not connected)\t");
		}
		testConnection();
	}
	
	public void testHeartbeat(){
		
	}

	public void testConnection(){
		if(wifi.connected()){
			if (sendCounter == 0){
				wifi.sendData(counter);
				System.out.println(counter);
				sendCounter = 1;
			}
			else{
				wifi.sendData(counter);
				System.out.println(counter);
				sendCounter = 0;
				counter ++;
			}
		}
	}
	
	public void sendStart(){
		wifi.sendData(RobotConstants.WIFI_CODE_REQ_START);
	}
	
	public void getData(){
		wifi.getData();
	}
	
	static {
//		Task t = new TestCommunication();
//		t.period = 500;
//		Task.install(t);
		try {
			new TestCommunication();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}	
}